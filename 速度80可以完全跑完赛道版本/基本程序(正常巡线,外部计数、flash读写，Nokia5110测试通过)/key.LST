C51 COMPILER V9.01   KEY                                                                   11/10/2015 18:46:58 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN key.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE key.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "key.h"
   2          #include "nokia_5110.h"
   3          #include "STC12C5A60S2.H"   
   4          
   5          sbit change_line = P1^0;        
   6          sbit Add_1 = P1^1;      
   7          sbit Sub_1 = P1^2; 
   8          
   9          extern char servo_P;   //PID系数
  10          extern char servo_D;
  11          extern unsigned char servo_middle;
  12          extern char speed_expect;
  13          extern int frequent;
  14          
  15          
  16                                                  
  17          unsigned char line_num;
  18          
  19          void pre_show(void)
  20          {
  21   1        
  22   1             LCD_write_english_string(0,0,"*");
  23   1             LCD_write_english_string(10,0,"servo_P:");
  24   1                 LCD_write_char(65,0,servo_P);
  25   1                 
  26   1                 LCD_write_english_string(10,1,"servo_D:");
  27   1                 LCD_write_char(65,1,servo_D);
  28   1      
  29   1                 LCD_write_english_string(10,2,"servo_mid");
  30   1                 LCD_write_char(65,2,servo_middle);
  31   1                          
  32   1             LCD_write_english_string(10,3,"speed_exp");       //我自己加的速度选项
  33   1                 LCD_write_char(65,3,speed_expect);
  34   1                 
  35   1                 
  36   1                 LCD_write_english_string(10,5,"frequent");
  37   1                 LCD_write_char(65,5,frequent);  
  38   1      
  39   1      }
  40          
  41          
  42          
  43          /*********************************修改变量数值***********************************/
  44          void change_value(unsigned char m,int i)
  45          {  
  46   1      
  47   1             switch(m)
  48   1             {
  49   2             case 0: servo_P+=i;       
  50   2                      LCD_clear_l(65,0);
  51   2                      LCD_write_english_string(0,0,"*");
  52   2                      LCD_write_char(65,0,servo_P); 
  53   2                      break;
  54   2                       
  55   2             case 1:servo_D+=i;
C51 COMPILER V9.01   KEY                                                                   11/10/2015 18:46:58 PAGE 2   

  56   2                       LCD_clear_l(65,1);
  57   2                       LCD_write_english_string(0,1,"*");
  58   2                       LCD_write_char(65,1,servo_D);
  59   2                       break;
  60   2      
  61   2                 case 2:servo_middle+=i;
  62   2                       LCD_clear_l(65,2);
  63   2                       LCD_write_english_string(0,2,"*");
  64   2                       LCD_write_char(65,2,servo_middle);
  65   2                       break;
  66   2      
  67   2      
  68   2             }
  69   1          
  70   1           }
  71            
  72          /****************************************************
  73                               按键扫描函数
  74          *****************************************************/
  75          
  76          void KeyScan (void)
  77          {
  78   1       unsigned char num=0;                  
  79   1                                      
  80   1      
  81   1        if(~change_line)  //如果检测到低电平，说明按键按下
  82   1          {
  83   2                LCD_DLY_ms(8); //延时去抖，一般10-20ms
  84   2           if(~change_line)     //再次确认按键是否按下，没有按下则退出
  85   2                   {
  86   3             while(~change_line);//如果确认按下按键等待按键释放，没有释放则一直等待
  87   3                   
  88   3      //           if(page_num!=0)
  89   3                      LCD_write_english_string(0,line_num," ");
  90   3                         
  91   3                         if(line_num<2)    //行序号加操作    NOKIA最多显示6行，0~5                            
  92   3                       line_num++;
  93   3                         else
  94   3                             line_num=0;
  95   3                         
  96   3      //                 if(page_num!=0)
  97   3                      LCD_write_english_string(0,line_num,"*");
  98   3                   } 
  99   2                   
 100   2         }
 101   1                
 102   1      ////////////////////////对应参数加一///////////////////////////////////////////////////////
 103   1      if(~Add_1)  //如果检测到低电平，说明按键按下
 104   1          {
 105   2               LCD_DLY_ms(8); //延时去抖，一般10-20ms
 106   2           if(~Add_1)     //再次确认按键是否按下，没有按下则退出
 107   2                 {
 108   3              while(~Add_1);//如果确认按下按键等待按键释放，没有释放则一直等待
 109   3              change_value(line_num,1);  
 110   3                 }
 111   2                }
 112   1      /////////////////////////////////对应参数减一///////////////////////////////////////////////
 113   1      if(~Sub_1)  //如果检测到低电平，说明按键按下
 114   1         {
 115   2               LCD_DLY_ms(8);   //延时去抖，一般10-20ms
 116   2           if(~Sub_1)     //再次确认按键是否按下，没有按下则退出
 117   2                 {
C51 COMPILER V9.01   KEY                                                                   11/10/2015 18:46:58 PAGE 3   

 118   3              while(~Sub_1);//如果确认按下按键等待按键释放，没有释放则一直等待
 119   3              change_value(line_num,-1);
 120   3                       }
 121   2                }
 122   1                }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    363    ----
   CONSTANT SIZE    =     51    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
